m
dir()
dir()
my_html = read_html(url)
my_html %>% html_element(xpath = '//*[@id="firstHeading"]/span') %>% html_text()
#librerias
require(pacman)
p_load(tidyverse,stargazer,coefplot,rio,skimr, sf, leaflet, tmaptools,ggmap,osmdata, rvest, wordCloud2)
p_load(tidyverse,stargazer,coefplot,rio,skimr, sf, leaflet, tmaptools,ggmap,osmdata, rvest, wordCloud)
updateR()
updateR(
fast = FALSE,
browse_news = TRUE,
install_R = FALSE,
copy_package = FALSE,
copy_Rprofile.site = FALSE,
keep_old_packages = FALSE,
update_packages = TRUE
)
install.packages("installr")
p_load("installr")
require(pacman)
p_load("installr")
updateR()
install.packages("installr")
install.packages("installr")
updateR()
1
library(installr)
updateR()
version
help(package="googledrive")
help(package="rio")
install.packages("wooldridge")
install.packages("AER", "car", "censReg", "dummies")
install.packages("AER","car","censReg","dummies")
#descargar librerias importantes
install.packages(c("AER", "car", "censReg","dplyr", "dummies", "dynlm",
"effects", "ggplot2", "lmtest", "maps", "mfx", "orcutt", "plm",
"quantmod", "sandwich", "quantreg", "rio", "rmarkdown", "sample selection",
"stargazer", "survival", "systemfit", "truncreg", "tseries",
"ulcra", "xtable", "vars", "WDI", "wooldridge", "xts", "zoo"))
#obtener directorio de trabajoo
getwd()
setwd("C:/Users/richa/Music/Este pc/GIthub/Ejercicios-R/Introducci√≥n a R")
########funciones Aritmericas#############
#valor absoluto
x<- -4
abs(x)
#raiz cuadrada
sqrt(x)
#raiz cuadrada
sqrt(abs(x))
#exponencial
exp(x)
#logaritmo
log(x)
#logaritmo
log(abs(x))
log(a,b)
#logaritmo de a en base b
a<- 10
b<- 4
log(a,b)
#redondear un numero a con b digitos
round(a,b)
#logaritmo de a en base b
a<- 0.09
#redondear un numero a con b digitos
round(a,b)
#factorial
factorial(b)
#combinatoria/ coeficiente binomial
choose(a,b)
#combinatoria/ coeficiente binomial
choose(a,b)
###########Incluir elementos dentro de elementos
x <- 3 + exp(a)
y <- x^2
#####vectores
x <- c(1,2,3,4,5)
b <- x + 1
b
y <- x + 1
z <- x+y
w <-z*y
exp(w)
#funciones para analizar vectores
lenght(X)
#funciones para analizar vectores
length(X)
#funciones para analizar vectores
length(x)
max(x)
min(x)
sort(x)
sort(z)
u <- c(3,5 2,1,0)
u <- c(3,5,2,1,0)
sort(u)
sum(x)
prod(x)
numeric(n)
numeric(x)
seq(10)
seq(2,10)
seq(1,10,2)
##operadores logicos##
x==y
x<y
x<=y
x>y
x>z
x=!
x=!y
x!=y
!x
a|b
a&b # a y b son verdaderos
##nota: los vectores no necesariamente deben ser numericos, tambien pueden ser strings
ciudades <- c("bogota", "munich", "buenos aires")
ciudades
ciudades == y
ciudades != x
#incluir etiquetas a vectores
xe <- factor(x, labels =c("pequeno", "grande"))
#incluir etiquetas a vectores
xe <- factor(x, labels =c("pequeno", "mediano", "grande", "extra grande", "gigantesco"))
xe
#indexar
x <- seq(1,10)
elemento3dex <- x[3]
elemento3dex
#ponerle nombre a vectores
x<- seq(1,3)
rm(list=ls())
#ponerle nombre a vectores
x<- seq(1,3)
equis <- c("uno", "dos", "tres")
names(x) <- equis
x
sqrt(x)
max(x)
A <- martix(v, nrows=2)
A <- matrix(v, nrows=2)
A <- matrix(v, nrows=2)
######crear matrices#####
v <- c(1,2,3,4)
A <- matrix(v, nrows=2)
A <- matrix(v, nrow=2)
View(A)
A <- matrix(v, nrow=3)
A <- matrix(v, nrow=2)
fila1<- c(1,2) ; fila2 <- c(3,4)
A2 <- rbind(fila1, fila2)
View(A2)
col<- c(1,3) ; col<-c(2,4)
col1<- c(1,3) ; col2<-c(2,4)
A3 <- cbind(col1, col2)
View(A3)
A3 <- cbind(col1, col2)  # por sus siglas: columbind, incluye columnas
View(A)
colnames(A) <- c("columna1", "columna2")
rownames(A) <- c("fila1","filas2")
rownames(A) <- c("fila1","fila2")
## Diaogonal de una matrix, identidad, indexar matrices y operaciones ##
A <- diag(c(4,3,2))
A
B <- diag(3)
B
A*B
#transpuesta
a <- t(A)
a
C <- A%*%B
C
A <- colbind(c(4, 0, 1))
A <- cbind(c(4, 0, 1))
## Diaogonal de una matrix, identidad, indexar matrices y operaciones ##
A <- diag(c(4,3,2)) %>% cbind(c(4,0,1))
require(pacman)
p_load(dplyr)
## Diaogonal de una matrix, identidad, indexar matrices y operaciones ##
A <- diag(c(4,3,2)) %>% cbind(c(4,0,1))
rm(list=ls())
## Diaogonal de una matrix, identidad, indexar matrices y operaciones ##
A <- diag(c(4,3,2)) %>% cbind(c(4,0,1))
## Diaogonal de una matrix, identidad, indexar matrices y operaciones ##
A <- diag(c(4,3,2)) %>% cbind(c(4,0,1)) %>% rbind(c(0,3,4))
View(A)
lista1 <- list(x=seq(1,10, 2), F=matrix(c(1,2,3,4), nrow=2),
ciudades = c("cartagena","medellin", "moscow"))
#extraemos el primer elemento de la lista
lista1$x
#extraemos el segundo elemento de la lista
lista1$f
View(lista1)
#extraemos el segundo elemento de la lista
lista1$F
#extraemos el tercer elemnto de la lista
lista1$ciudades
