m
dir()
dir()
my_html = read_html(url)
my_html %>% html_element(xpath = '//*[@id="firstHeading"]/span') %>% html_text()
#librerias
require(pacman)
p_load(tidyverse,stargazer,coefplot,rio,skimr, sf, leaflet, tmaptools,ggmap,osmdata, rvest, wordCloud2)
p_load(tidyverse,stargazer,coefplot,rio,skimr, sf, leaflet, tmaptools,ggmap,osmdata, rvest, wordCloud)
updateR()
updateR(
fast = FALSE,
browse_news = TRUE,
install_R = FALSE,
copy_package = FALSE,
copy_Rprofile.site = FALSE,
keep_old_packages = FALSE,
update_packages = TRUE
)
install.packages("installr")
p_load("installr")
require(pacman)
p_load("installr")
updateR()
install.packages("installr")
install.packages("installr")
updateR()
1
library(installr)
updateR()
version
p_load(dplyr, wooldrige)
require(pacman)
p_load(dplyr, wooldrige)
p_load(dplyr, wooldridge)
data(affairs, package = 'wooldridge')
help("factor")
View(affairs)
haskids <- factor(affairs$kids, labels = c("no", "yes"))
haskids
haskids <- factor(affairs%$kids, labels = c("yes", "no"))
haskids2 <- factor(affairs%$kids, labels = c("yes", "no"))
mlab <- c("very unhappy", "unhappy", "average", "happy", "very happy")
marriage <- factor(affairs$ratemarr, labels = mlab)
max(affairs$ratemarr)
min(affairs$ratemarr)
#FRECUENCIA DE TENER HIJOS
table(haskids)
##PORCENTAJE/PROPORCION DE SATISFACCION DE MARTIMONIO
prop.table(table(marriage))
#tabla de contingencia
tablaCont <- table(marriage, haskids)
tablaCont
#tabla de proporcion de satisfaccion de matrimonio y si tiene hijos
prop.table(tablaCont)
#tabla de proporcion de satisfaccion de matrimonio y si tiene hijos
prop.table(tablaCont, margin=1)
prop.table(table(haskids))
p_load(dplyr, wooldridge, strargazer)
#resuduales, coeficioentes y valores ajustafdos
require(pacman)
p_load(dplyr, wooldridge, strargazer)
#cargamos una base de dat
df <- data(wage1, package='wooldridge')
#cargamos una base de dat
df <- data(wage1, package='wooldridge') %>% as.data.frame()
#cargamos una base de dat
df <- data(wage1, package='wooldridge') %>% as.data.frame()
#cargamos una base de dat
data(wage1, package='wooldridge') %>% as.data.frame()
#cargamos una base de dat
data(wage1, package='wooldridge')
View(df)
#cargamos una base de dat
data(ceosal1, package='wooldridge')
force(ceosal1)
force(wage1)
rm(list=ls())
#cargamos una base de dat
data(ceosal1, package='wooldridge')
force(ceosal1)
#cargamos una base de dat
data(ceosal1, package='wooldridge') %>% as.data.frame()
force(ceosal1)
View(ceosal1)
View(ceosal1)
#cargamos una regresion
modelo1 <- lm(salary ~ roe, data=ceosal1)
names(modelo1)
#obtenemos los coeficientes
modelo1betas <- modelo1$coefficients
modelo1betas
#obtenemos los residuales
modelo1residuals <- modelo1$residuals
#cargamos una base de dat
df<-data(ceosal1, package='wooldridge')
#cargamos una base de dat
df<-data(ceosal1, package='wooldridge')
View(modelo1)
salario <- ceosal1$salary
roe <- ceosal1$roe
df_new <- cbind(salario, roe, modelo1residuals)
View(df_new)
mediacond<- df_new %>% group_by(roe) %>% summarise(media = mean(modelo1residuals))
mediacond<- df_new %>% group_by(roe) %>% summarise(mediacondi = mean(modelo1residuals))
df_new <- cbind(salario, roe, modelo1residuals) %>% as.data.frame()
mediacond<- df_new %>% group_by(roe) %>% summarise(mediacondi = mean(modelo1residuals))
View(mediacond)
print(meadiacond)
print(mediacond)
mean(mediacond)
mean(mediacond$mediacondi)
mediacond<- df_new %>% group_by(roe) %>% summarize(mediacondi = mean(modelo1residuals))
mean(mediacond$mediacondi)
mediacond1<- df_new %>% group_by(roe) %>% summarize(mediacondi = mean(modelo1residuals))
mean(mediacond1$mediacondi)
#simulacion de montecarlo
set.seed(666)
x <- rnorm(n,4,1)
#definimos el tamaño de la muestra
n <- 10000
x <- rnorm(n,4,1)
#definimos los parametros reales
b0<- 1 ; b1 <- 0.5 ; su <- 2
u <- rnorm(n,0,su)
y <- b0+b1*x+u
regresion <- lm(y~x)
regresion$coefficients
mean(regresion$coefficients)
rm(list=ls())
#2. simulacion de montecarlo
set.seed(1234567)
help(numeric)
#inicializamos
b0hat <- numeric(r)
n<-1000 ; r<- 10000
b0 <- 1 ; b1 <- 0.5 ; su <- 2
#inicializamos
b0hat <- numeric(r)
b1hat <- numeric(r)
b0hat
x <- rnorm(n,4,1)
bhat["(Intercept)"]
b1hat[j]=bhat["x"]
#loop#
for(j in 1:r){
#extraiga una muestra de y
u<-rnorm(n,0,su)
y<- b0 + b1*x+u
bhat <- coefficients(lm(y~x))
b0hat[j]=bhat["(Intercept)"]
b1hat[j]=bhat["x"]
}
b1hat
mean(b1hat)
bhat
bhat
plot(NULL, xlim= c(0,8), ylim=c(1,6))
for(j in 1:10) abline(b0hat[j],b1hat[j], col="gray")
abline(b0,b1, lwd=2)
getwd()
#taller Random controll trials
#NOTA: Este ejercicio es exclusivo de la Universidad de los Andes y se realiza con
#      fines pedagogicos
#cargamos las librerias con pacman
require(pacman)
p_load(rio, dyplr)
p_load(rio, dplyr)
setwd("C:/Users/richa/Music/Este pc/GIthub/Ejercicios-R/taller RCT's")
#cargar bases de datos#
import("/bases/NHIS.dta")
#cargar bases de datos#
import("~/bases/NHIS.dta")
#cargar bases de datos#
import("C:/Users/richa/Music/Este pc/GIthub/Ejercicios-R/taller RCT's/bases/NHIS.dta")
#cargar bases de datos#
df <-import("C:/Users/richa/Music/Este pc/GIthub/Ejercicios-R/taller RCT's/bases/NHIS.dta")
View(df)
#realizamos estadisticas descriptivas para cada una de las variables
#age#
table(df$age)
#realizamos estadisticas descriptivas para cada una de las variables
#age#
mean(age)
#realizamos estadisticas descriptivas para cada una de las variables
#age#
mean(df$age)
var(df$age)
sd(df$age)
# la media de la edad para los encuestados es de aproximadamente 35 años. su varianza
# es de 495 aproximadamente y su desviacion estandar es de 22 años.
#famsize; tamaño de la familia
mean(df$famsize)
var(df$famsize)
sd(sd$famsize)
sd(df$famsize)
#En promedio, el total de los encuestados, conforman una familia de 3 personas.
#adicionalmente, la varianza es de 3 y su desviacion estandar es de 1 personas.
#educ
mean(df$educ)
var(df$educ)
sd(df$educ)
mean(df$inc)
var(df$inc)
sd(df$inc)
68452.72+54493
#health_index
mean(df$health_index)
var(df$health_index)
sd(df$health_index)
min(df$age)
max(df$age)
min(df$famsize)
max(df$famsize)
min(df$educ)
max(df$educ)
min(df$inc)
max(df$inc)
min(df$health_index)
max(df$health_index)
var(df$health_index)
sd(df$health_index)
min(df$health_index)
max(df$health_index)
# realizamos estadísticas descriptivas para variables dummy
table(df$sex)
prop.table(df$sex)
prop.table(table(df$sex))
# realizamos estadísticas descriptivas para variables dummy
table(df$sex)
prop.table(table(df$sex))
View(df)
#nwhite
table(df$nwhite)
prop.table(talbe(df$nwhite))
prop.table(table(df$nwhite))
prop.table(table((df$insurance))
prop.table(table(df$insurance))
#Insurance
table(df$insurance)
prop.table(table(df$insurance))
#a) prueba de hipotesis
by(datos$health_index, datos$insurance, summary)
#a) prueba de hipotesis
by(df$health_index, df$insurance, summary)
t_test_result <- t.test(health_index ~ insurance, data = df, var.equal = FALSE)
t_test_result
t.test(health_index ~ insurance, data = df, var.equal = FALSE)
View(t_test_result)
print(t_test_result)
t_test_result$estimate
t_test_result$statistic
t_test_result$parameter
t_test_result$parameter
t_test_result
p_load(rio, dplyr, stargazer)
modelo1 <- lm(health_index ~ insurance, data = df)
stargazer(modelo1)
stargazer(modelo1, type = "text")
View(modelo1)
#c)
is.na(rm=TRUE)
#cargar bases de datos#
df <-import("C:/Users/richa/Music/Este pc/GIthub/Ejercicios-R/taller RCT's/bases/NHIS.dta")
#taller Random controll trials
#NOTA: Este ejercicio es exclusivo de la Universidad de los Andes y se realiza con
#      fines pedagogicos
#cargamos las librerias con pacman y seleccionamos el directorio
require(pacman)
setwd("C:/Users/richa/Music/Este pc/GIthub/Ejercicios-R/taller RCT's")
#cargar bases de datos#
df <-import("C:/Users/richa/Music/Este pc/GIthub/Ejercicios-R/taller RCT's/bases/NHIS.dta")
#taller Random controll trials
#NOTA: Este ejercicio es exclusivo de la Universidad de los Andes y se realiza con
#      fines pedagogicos
#cargamos las librerias con pacman y seleccionamos el directorio
require(pacman)
p_load(rio, dplyr, stargazer)
#cargar bases de datos#
df <-import("C:/Users/richa/Music/Este pc/GIthub/Ejercicios-R/taller RCT's/bases/NHIS.dta")
View(df)
#realizamos estadisticas descriptivas para cada una de las variables continuas
#age#
mean(df$age)
var(df$age)
sd(df$age)
min(df$age)
max(df$age)
by(df$age, summarize)
summarize(df$age)
summarize(as.dataframe(df$age))
summarize(as.data.frame(df$age))
summarize(as.matrix(df$age))
summarize(as.data.frame(df))
Ed <- summarize(as.data.frame(df))
View(Ed)
conS <- subset(insurance == 1, data=df)
conS <- subset(data=df, insurance==1)
View(df)
rm(list=ls())
#cargar bases de datos#
df <-import("C:/Users/richa/Music/Este pc/GIthub/Ejercicios-R/taller RCT's/bases/NHIS.dta")
conS <- subset(data=df, insurance==1)
conS <- subset(x = df,subset= insurance, select ==1)
conS <- df %>% filter(insurance==1)
View(conS)
sinS <- df %>% filter(insurance==0)
#realizamos un loop para que realice la prueba de hipotesis para cada observacion en
variables_to_compare <- c("age", "famsize", "sex", "educ", "inc", "nwhite", "health_index")
resultados <- list()
resultados <- list(
mean_with_insurance = mean(conSe, na.rm = TRUE),
mean_without_insurance = mean(sinSe, na.rm = TRUE),
t_stat = t_test$statistic,
p_value = t_test$p.value
)
for (var in variables_to_compare) {
conSe <- conS[[var]]
sinSe <- sinS[[var]]
t_test <- t.test(conSe, sinSe, na.rm=TRUE)
resultados <- list(
mean_with_insurance = mean(conSe, na.rm = TRUE),
mean_without_insurance = mean(sinSe, na.rm = TRUE),
t_stat = t_test$statistic,
p_value = t_test$p.value
)
}
resultados
for (var in variables_to_compare) {
conSe <- conS[[var]]
sinSe <- sinS[[var]]
t_test <- t.test(conSe, sinSe, na.rm=TRUE)
resultados <- list(
media_con_seguro = mean(conSe, na.rm = TRUE),
media_sin_seguro = mean(sinSe, na.rm = TRUE),
t_stat = t_test$statistic,
p_value = t_test$p.value
)
}
resultados
conSe
for (var in variables_to_compare) {
conSe <- conS[[var]]
sinSe <- sinS[[var]]
t_test <- t.test(conSe, sinSe, na.rm=TRUE)
resultados[[var]] <- list(
media_con_seguro = mean(conSe, na.rm = TRUE),
media_sin_seguro = mean(sinSe, na.rm = TRUE),
t_stat = t_test$statistic,
p_value = t_test$p.value
)
}
resultados
View(resultados)
#taller Random controll trials
#NOTA: Este ejercicio es exclusivo de la Universidad de los Andes y se realiza con
#      fines pedagogicos
#cargamos las librerias con pacman y seleccionamos el directorio
require(pacman)
p_load(rio, dplyr, stargazer)
setwd("C:/Users/richa/Music/Este pc/GIthub/Ejercicios-R/taller RCT's")
#cargar bases de datos#
df <-import("C:/Users/richa/Music/Este pc/GIthub/Ejercicios-R/taller RCT's/bases/NHIS.dta")
conS <- df %>% filter(insurance==1)
sinS <- df %>% filter(insurance==0)
df[["age"]]
resultados
for (var in variables_to_compare) {
conSe <- conS[[var]]
sinSe <- sinS[[var]]
t_test <- t.test(conSe, sinSe, na.rm=TRUE)
resultados[[var]] <- list(
media_con_seguro = mean(conSe, na.rm = TRUE),
media_sin_seguro = mean(sinSe, na.rm = TRUE),
t_stat = t_test$statistic,
p_value = t_test$p.value
)
}
#realizamos un loop para que realice la prueba de hipotesis para cada observacion en
variables_to_compare <- c("age", "famsize", "sex", "educ", "inc", "nwhite", "health_index")
resultados <- list()
for (var in variables_to_compare) {
conSe <- conS[[var]]
sinSe <- sinS[[var]]
t_test <- t.test(conSe, sinSe, na.rm=TRUE)
resultados[[var]] <- list(
media_con_seguro = mean(conSe, na.rm = TRUE),
media_sin_seguro = mean(sinSe, na.rm = TRUE),
t_stat = t_test$statistic,
p_value = t_test$p.value
)
}
resultados
View(resultados)
resultados$age
resultados$famsize
View(df)
modelototal <- lm(healh_index ~ insurance + nwhite + inc + educ + sex + famsize + age, data = df)
modelototal <- lm(heath_index ~ insurance + nwhite + inc + educ + sex + famsize + age, data = df)
modelototal <- lm(health_index ~ insurance + nwhite + inc + educ + sex + famsize + age, data = df)
stargazer(modelototal, type = "text")
